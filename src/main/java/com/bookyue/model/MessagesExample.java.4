package com.bookyue.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MessagesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public MessagesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMsgIdIsNull() {
            addCriterion("msg_id is null");
            return (Criteria) this;
        }

        public Criteria andMsgIdIsNotNull() {
            addCriterion("msg_id is not null");
            return (Criteria) this;
        }

        public Criteria andMsgIdEqualTo(Integer value) {
            addCriterion("msg_id =", value, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdNotEqualTo(Integer value) {
            addCriterion("msg_id <>", value, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdGreaterThan(Integer value) {
            addCriterion("msg_id >", value, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("msg_id >=", value, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdLessThan(Integer value) {
            addCriterion("msg_id <", value, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdLessThanOrEqualTo(Integer value) {
            addCriterion("msg_id <=", value, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdIn(List<Integer> values) {
            addCriterion("msg_id in", values, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdNotIn(List<Integer> values) {
            addCriterion("msg_id not in", values, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdBetween(Integer value1, Integer value2) {
            addCriterion("msg_id between", value1, value2, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgIdNotBetween(Integer value1, Integer value2) {
            addCriterion("msg_id not between", value1, value2, "msgId");
            return (Criteria) this;
        }

        public Criteria andMsgStatusIsNull() {
            addCriterion("msg_status is null");
            return (Criteria) this;
        }

        public Criteria andMsgStatusIsNotNull() {
            addCriterion("msg_status is not null");
            return (Criteria) this;
        }

        public Criteria andMsgStatusEqualTo(Byte value) {
            addCriterion("msg_status =", value, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusNotEqualTo(Byte value) {
            addCriterion("msg_status <>", value, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusGreaterThan(Byte value) {
            addCriterion("msg_status >", value, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("msg_status >=", value, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusLessThan(Byte value) {
            addCriterion("msg_status <", value, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusLessThanOrEqualTo(Byte value) {
            addCriterion("msg_status <=", value, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusIn(List<Byte> values) {
            addCriterion("msg_status in", values, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusNotIn(List<Byte> values) {
            addCriterion("msg_status not in", values, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusBetween(Byte value1, Byte value2) {
            addCriterion("msg_status between", value1, value2, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("msg_status not between", value1, value2, "msgStatus");
            return (Criteria) this;
        }

        public Criteria andMsgTimeIsNull() {
            addCriterion("msg_time is null");
            return (Criteria) this;
        }

        public Criteria andMsgTimeIsNotNull() {
            addCriterion("msg_time is not null");
            return (Criteria) this;
        }

        public Criteria andMsgTimeEqualTo(Date value) {
            addCriterion("msg_time =", value, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeNotEqualTo(Date value) {
            addCriterion("msg_time <>", value, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeGreaterThan(Date value) {
            addCriterion("msg_time >", value, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("msg_time >=", value, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeLessThan(Date value) {
            addCriterion("msg_time <", value, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeLessThanOrEqualTo(Date value) {
            addCriterion("msg_time <=", value, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeIn(List<Date> values) {
            addCriterion("msg_time in", values, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeNotIn(List<Date> values) {
            addCriterion("msg_time not in", values, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeBetween(Date value1, Date value2) {
            addCriterion("msg_time between", value1, value2, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgTimeNotBetween(Date value1, Date value2) {
            addCriterion("msg_time not between", value1, value2, "msgTime");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridIsNull() {
            addCriterion("msg_from_userid is null");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridIsNotNull() {
            addCriterion("msg_from_userid is not null");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridEqualTo(Integer value) {
            addCriterion("msg_from_userid =", value, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridNotEqualTo(Integer value) {
            addCriterion("msg_from_userid <>", value, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridGreaterThan(Integer value) {
            addCriterion("msg_from_userid >", value, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("msg_from_userid >=", value, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridLessThan(Integer value) {
            addCriterion("msg_from_userid <", value, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridLessThanOrEqualTo(Integer value) {
            addCriterion("msg_from_userid <=", value, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridIn(List<Integer> values) {
            addCriterion("msg_from_userid in", values, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridNotIn(List<Integer> values) {
            addCriterion("msg_from_userid not in", values, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridBetween(Integer value1, Integer value2) {
            addCriterion("msg_from_userid between", value1, value2, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgFromUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("msg_from_userid not between", value1, value2, "msgFromUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridIsNull() {
            addCriterion("msg_to_userId is null");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridIsNotNull() {
            addCriterion("msg_to_userId is not null");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridEqualTo(Integer value) {
            addCriterion("msg_to_userId =", value, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridNotEqualTo(Integer value) {
            addCriterion("msg_to_userId <>", value, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridGreaterThan(Integer value) {
            addCriterion("msg_to_userId >", value, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("msg_to_userId >=", value, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridLessThan(Integer value) {
            addCriterion("msg_to_userId <", value, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridLessThanOrEqualTo(Integer value) {
            addCriterion("msg_to_userId <=", value, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridIn(List<Integer> values) {
            addCriterion("msg_to_userId in", values, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridNotIn(List<Integer> values) {
            addCriterion("msg_to_userId not in", values, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridBetween(Integer value1, Integer value2) {
            addCriterion("msg_to_userId between", value1, value2, "msgToUserid");
            return (Criteria) this;
        }

        public Criteria andMsgToUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("msg_to_userId not between", value1, value2, "msgToUserid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table messages
     *
     * @mbg.generated do_not_delete_during_merge Sat Sep 08 16:26:27 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table messages
     *
     * @mbg.generated Sat Sep 08 16:26:27 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}