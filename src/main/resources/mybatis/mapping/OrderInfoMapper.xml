<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookyue.mapper.OrderInfoMapper">
	<resultMap id="BaseResultMap"
		type="com.bookyue.model.OrderInfo">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="book_id" jdbcType="INTEGER" property="bookId" />
		<result column="book_amount" jdbcType="SMALLINT"
			property="bookAmount" />
		<result column="book_price" jdbcType="DECIMAL"
			property="bookPrice" />
		<result column="total_price" jdbcType="DECIMAL"
			property="totalPrice" />
		<result column="book_name" jdbcType="VARCHAR"
			property="bookName" />
		<result column="book_author" jdbcType="VARCHAR"
			property="bookAuthor" />
		<result column="book_pic_path" jdbcType="VARCHAR"
			property="bookPicPath" />
		<result column="book_publisher" jdbcType="VARCHAR"
			property="bookPublisher" />
		<result column="buyer_user_id" jdbcType="INTEGER"
			property="buyerUserId" />
		<result column="total_price" jdbcType="DECIMAL"
			property="totalPrice" />
		<result column="seller_user_id" jdbcType="INTEGER"
			property="sellerUserId" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="complete_time" jdbcType="TIMESTAMP"
			property="completeTime" />
		<result column="cancle_cause" jdbcType="SMALLINT"
			property="cancleCause" />
	</resultMap>

	<resultMap id="CustomResultMap"
		type="com.bookyue.model.OrderInfoCustom">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="book_id" jdbcType="INTEGER" property="bookId" />
		<result column="book_amount" jdbcType="SMALLINT"
			property="bookAmount" />
		<result column="book_price" jdbcType="DECIMAL"
			property="bookPrice" />
		<result column="book_name" jdbcType="VARCHAR"
			property="bookName" />
		<result column="book_author" jdbcType="VARCHAR"
			property="bookAuthor" />
		<result column="book_pic_path" jdbcType="VARCHAR"
			property="bookPicPath" />
		<result column="book_publisher" jdbcType="VARCHAR"
			property="bookPublisher" />
		<result column="buyer_user_id" jdbcType="INTEGER"
			property="buyerUserId" />
		<result column="total_price" jdbcType="DECIMAL"
			property="totalPrice" />
		<result column="seller_user_id" jdbcType="INTEGER"
			property="sellerUserId" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
		<result column="complete_time" jdbcType="TIMESTAMP"
			property="completeTime" />
		<result column="cancle_cause" jdbcType="SMALLINT"
			property="cancleCause" />
		<result column="seller_username" jdbcType="VARCHAR"
			property="sellerUserName" />
		<result column="seller_avatar_url" jdbcType="VARCHAR"
			property="sellerAvatarUrl" />
	</resultMap>


	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>


	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, book_id, book_amount, book_price, book_name,
		book_author,
		book_publisher, buyer_user_id,
		total_price, seller_user_id,
		status, create_time, complete_time, cancle_cause
	</sql>

	<select id="selectByExample"
		parameterType="com.bookyue.model.OrderInfoExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from order_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from order_info
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from order_info
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.bookyue.model.OrderInfoExample">
		delete from order_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.bookyue.model.OrderInfo">
		insert into order_info (id,
		book_id, book_amount,
		book_price, book_name, book_author,book_pic_path,
		book_publisher, buyer_user_id, total_price,
		seller_user_id, status,
		create_time,
		complete_time, cancle_cause)
		values
		(#{id,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER},
		#{bookAmount,jdbcType=SMALLINT},
		#{bookPrice,jdbcType=DECIMAL},
		#{bookName,jdbcType=VARCHAR},
		#{bookAuthor,jdbcType=VARCHAR},#{bookPicPath,jdbcType=VARCHAR}
		#{bookPublisher,jdbcType=VARCHAR}, #{buyerUserId,jdbcType=INTEGER},
		#{totalPrice,jdbcType=DECIMAL},
		#{sellerUserId,jdbcType=INTEGER},
		#{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
		#{completeTime,jdbcType=TIMESTAMP}, #{cancleCause,jdbcType=SMALLINT})
	</insert>

	<insert id="insertSelective"
		parameterType="com.bookyue.model.OrderInfo" useGeneratedKeys="true"
		keyProperty="id">
		insert into order_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="bookId != null">
				book_id,
			</if>
			<if test="bookAmount != null">
				book_amount,
			</if>
			<if test="bookPrice != null">
				book_price,
			</if>
			<if test="bookName != null">
				book_name,
			</if>
			<if test="bookAuthor != null">
				book_author,
			</if>
			<if test="bookPicPath != null">
				book_pic_path,
			</if>

			<if test="bookPublisher != null">
				book_publisher,
			</if>
			<if test="buyerUserId != null">
				buyer_user_id,
			</if>
			<if test="totalPrice != null">
				total_price,
			</if>
			<if test="sellerUserId != null">
				seller_user_id,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="completeTime != null">
				complete_time,
			</if>
			<if test="cancleCause != null">
				cancle_cause,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="bookId != null">
				#{bookId,jdbcType=INTEGER},
			</if>
			<if test="bookAmount != null">
				#{bookAmount,jdbcType=SMALLINT},
			</if>
			<if test="bookPrice != null">
				#{bookPrice,jdbcType=DECIMAL},
			</if>
			<if test="bookName != null">
				#{bookName,jdbcType=VARCHAR},
			</if>
			<if test="bookAuthor != null">
				#{bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="bookPicPath != null">
				#{bookPicPath,jdbcType=VARCHAR},
			</if>
			<if test="bookPublisher != null">
				#{bookPublisher,jdbcType=VARCHAR},
			</if>
			<if test="buyerUserId != null">
				#{buyerUserId,jdbcType=INTEGER},
			</if>
			<if test="totalPrice != null">
				#{totalPrice,jdbcType=DECIMAL},
			</if>
			<if test="sellerUserId != null">
				#{sellerUserId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="completeTime != null">
				#{completeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="cancleCause != null">
				#{cancleCause,jdbcType=SMALLINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.bookyue.model.OrderInfoExample"
		resultType="java.lang.Long">
		select count(*) from order_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update order_info
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.bookId != null">
				book_id = #{record.bookId,jdbcType=INTEGER},
			</if>
			<if test="record.bookAmount != null">
				book_amount = #{record.bookAmount,jdbcType=SMALLINT},
			</if>
			<if test="record.bookPrice != null">
				book_price = #{record.bookPrice,jdbcType=DECIMAL},
			</if>
			<if test="record.bookName != null">
				book_name = #{record.bookName,jdbcType=VARCHAR},
			</if>
			<if test="record.bookAuthor != null">
				book_author = #{record.bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="record.bookPublisher != null">
				book_publisher =
				#{record.bookPublisher,jdbcType=VARCHAR},
			</if>
			<if test="record.buyerUserId != null">
				buyer_user_id = #{record.buyerUserId,jdbcType=INTEGER},
			</if>
			<if test="record.totalPrice != null">
				total_price = #{record.totalPrice,jdbcType=DECIMAL},
			</if>
			<if test="record.sellerUserId != null">
				seller_user_id = #{record.sellerUserId,jdbcType=INTEGER},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=TINYINT},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.completeTime != null">
				complete_time =
				#{record.completeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.cancleCause != null">
				cancle_cause = #{record.cancleCause,jdbcType=SMALLINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update order_info
		set id = #{record.id,jdbcType=INTEGER},
		book_id =
		#{record.bookId,jdbcType=INTEGER},
		book_amount =
		#{record.bookAmount,jdbcType=SMALLINT},
		book_price =
		#{record.bookPrice,jdbcType=DECIMAL},
		book_name =
		#{record.bookName,jdbcType=VARCHAR},
		book_author =
		#{record.bookAuthor,jdbcType=VARCHAR},
		book_publisher =
		#{record.bookPublisher,jdbcType=VARCHAR},
		buyer_user_id =
		#{record.buyerUserId,jdbcType=INTEGER},
		total_price =
		#{record.totalPrice,jdbcType=DECIMAL},
		seller_user_id =
		#{record.sellerUserId,jdbcType=INTEGER},
		status =
		#{record.status,jdbcType=TINYINT},
		create_time =
		#{record.createTime,jdbcType=TIMESTAMP},
		complete_time =
		#{record.completeTime,jdbcType=TIMESTAMP},
		cancle_cause =
		#{record.cancleCause,jdbcType=SMALLINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.bookyue.model.OrderInfo">
		update order_info
		<set>
			<if test="bookId != null">
				book_id = #{bookId,jdbcType=INTEGER},
			</if>
			<if test="bookAmount != null">
				book_amount = #{bookAmount,jdbcType=SMALLINT},
			</if>
			<if test="bookPrice != null">
				book_price = #{bookPrice,jdbcType=DECIMAL},
			</if>
			<if test="bookName != null">
				book_name = #{bookName,jdbcType=VARCHAR},
			</if>
			<if test="bookAuthor != null">
				book_author = #{bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="bookPublisher != null">
				book_publisher = #{bookPublisher,jdbcType=VARCHAR},
			</if>
			<if test="buyerUserId != null">
				buyer_user_id = #{buyerUserId,jdbcType=INTEGER},
			</if>
			<if test="totalPrice != null">
				total_price = #{totalPrice,jdbcType=DECIMAL},
			</if>
			<if test="sellerUserId != null">
				seller_user_id = #{sellerUserId,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="completeTime != null">
				complete_time = #{completeTime,jdbcType=TIMESTAMP},
			</if>
			<if test="cancleCause != null">
				cancle_cause = #{cancleCause,jdbcType=SMALLINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.bookyue.model.OrderInfo">
		update order_info
		set book_id =
		#{bookId,jdbcType=INTEGER},
		book_amount =
		#{bookAmount,jdbcType=SMALLINT},
		book_price =
		#{bookPrice,jdbcType=DECIMAL},
		book_name =
		#{bookName,jdbcType=VARCHAR},
		book_author =
		#{bookAuthor,jdbcType=VARCHAR},
		book_publisher =
		#{bookPublisher,jdbcType=VARCHAR},
		buyer_user_id =
		#{buyerUserId,jdbcType=INTEGER},
		total_price =
		#{totalPrice,jdbcType=DECIMAL},
		seller_user_id =
		#{sellerUserId,jdbcType=INTEGER},
		status = #{status,jdbcType=TINYINT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		complete_time =
		#{completeTime,jdbcType=TIMESTAMP},
		cancle_cause =
		#{cancleCause,jdbcType=SMALLINT}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 自定义查询 -->
	<select id="selectOrderInfoCustomList"
		parameterType="com.bookyue.model.OrderInfo"
		resultMap="CustomResultMap">
		SELECT
		id, book_id,
		book_amount, book_price,
		book_name, book_author,
		book_pic_path,
		total_price,
		book_publisher,
		buyer_user_id,
		seller_user_id,
		status,
		create_time,
		complete_time,
		cancle_cause,
		u.user_name as
		seller_username,u.user_avatar_url
		as
		seller_avatar_url
		FROM order_info
		o,user_info u
		WHERE 1=1
		AND
		o.buyer_user_id=u.user_id
		<if test="buyerUserId != null">
			AND
			o.buyer_user_id =
			#{buyerUserId,jdbcType=INTEGER}
		</if>
		<if test="sellerUserId != null">
			AND
			o.seller_user_id =
			#{sellerUserId,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			AND o.status = #{status,jdbcType=TINYINT}
		</if>
		ORDER BY o.create_time DESC
	</select>

	<select id="selectAllByOrderQueryVo"
		parameterType="com.bookyue.model.OrderQueryVo"
		resultMap="CustomResultMap">
		SELECT
		id, book_id,
		book_amount, book_price,total_price,
		book_name,
		book_pic_path,book_author,
		buyer_user_id,
		seller_user_id,
		status,
		create_time,
		complete_time,
		cancle_cause,
		u.user_name as
		seller_username,u.user_avatar_url
		as
		seller_avatar_url
		FROM order_info
		o,user_info u
		WHERE 1=1
		AND
		(o.buyer_user_id = u.user_id and u.user_id=#{userId,jdbcType=INTEGER}
		or o.seller_user_id = u.user_id and u.user_id=#{userId,jdbcType=INTEGER})
		AND (o.buyer_user_id =#{userId,jdbcType=INTEGER} OR
		o.seller_user_id=#{userId,jdbcType=INTEGER})
		<if test="status!=null">
			ANd o.status = #{status,jdbcType=TINYINT}
		</if>
		ORDER BY o.create_time DESC
	</select>

	<select id="selectOnTradingOrderListByUserId"
		parameterType="java.lang.Integer" resultMap="CustomResultMap">
		SELECT id, book_id,
		book_amount, book_price, book_name, book_pic_path,book_author,
		buyer_user_id,
		seller_user_id, status, create_time,
		complete_time,total_price,
		cancle_cause,
		u.user_name as
		seller_username,u.user_avatar_url as
		seller_avatar_url
		FROM order_info
		o,user_info u
		WHERE
		((u.user_id=o.seller_user_id and o.seller_user_id =
		#{userId,jdbcType=INTEGER}) Or( u.user_id = o.buyer_user_id and
		o.buyer_user_id =#{userId,jdbcType=INTEGER}))
		And o.`status` in(1,2)
		ORDER BY o.create_time DESC
	</select>




</mapper>