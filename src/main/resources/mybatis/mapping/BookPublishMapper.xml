<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookyue.mapper.BookPublishMapper">
	<resultMap id="BaseResultMap"
		type="com.bookyue.model.BookPublish">
		<id column="book_id" jdbcType="INTEGER" property="bookId" />
		<result column="book_isbn" jdbcType="VARCHAR"
			property="bookIsbn" />
		<result column="book_name" jdbcType="VARCHAR"
			property="bookName" />
		<result column="book_prime_price" jdbcType="DECIMAL"
			property="bookPrimePrice" />
		<result column="book_author" jdbcType="VARCHAR"
			property="bookAuthor" />
		<result column="book_publisher" jdbcType="VARCHAR"
			property="bookPublisher" />
		<result column="book_sell_price" jdbcType="DECIMAL"
			property="bookSellPrice" />
		<result column="book_amount" jdbcType="TINYINT"
			property="bookAmount" />
		<result column="book_pic_path" jdbcType="VARCHAR"
			property="bookPicPath" />
		<result column="book_desc" jdbcType="VARCHAR"
			property="bookDesc" />
		<result column="book_type_id" jdbcType="TINYINT"
			property="bookTypeId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="publish_time" jdbcType="TIMESTAMP"
			property="publishTime" />
		<result column="publish_type" jdbcType="TINYINT"
			property="publishType" />
	</resultMap>

	<resultMap id="BookPublishCustomResultMap"
		type="com.bookyue.model.BookPublishCustom">
		<id column="book_id" jdbcType="INTEGER" property="bookId" />
		<result column="book_isbn" jdbcType="VARCHAR"
			property="bookIsbn" />
		<result column="book_name" jdbcType="VARCHAR"
			property="bookName" />
		<result column="book_prime_price" jdbcType="DECIMAL"
			property="bookPrimePrice" />
		<result column="book_author" jdbcType="VARCHAR"
			property="bookAuthor" />
		<result column="book_publisher" jdbcType="VARCHAR"
			property="bookPublisher" />
		<result column="book_sell_price" jdbcType="DECIMAL"
			property="bookSellPrice" />
		<result column="book_amount" jdbcType="TINYINT"
			property="bookAmount" />
		<result column="book_pic_path" jdbcType="VARCHAR"
			property="bookPicPath" />
		<result column="book_desc" jdbcType="VARCHAR"
			property="bookDesc" />
		<result column="book_type_id" jdbcType="TINYINT"
			property="bookTypeId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="publish_time" jdbcType="TIMESTAMP"
			property="publishTime" />
		<result column="publish_type" jdbcType="TINYINT"
			property="publishType" />

		<result column="user_name" jdbcType="VARCHAR"
			property="userInfo.userName" />
		<result column="user_major" jdbcType="VARCHAR"
			property="userInfo.userMajor" />			
		<result column="user_avatar_url" jdbcType="VARCHAR"
			property="userInfo.userAvatarUrl" />
		<result column="user_sex" jdbcType="TINYINT" property="userInfo.userSex" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		book_id, book_isbn, book_name, book_prime_price,
		book_author, book_publisher,
		book_sell_price,
		book_amount,
		book_pic_path, book_desc, book_type_id, user_id, publish_time,
		publish_type
	</sql>
	<select id="selectByExample"
		parameterType="com.bookyue.model.BookPublishExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from book_publish
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from book_publish
		where book_id = #{bookId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from book_publish
		where book_id =
		#{bookId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.bookyue.model.BookPublishExample">
		delete from book_publish
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.bookyue.model.BookPublish">
		insert into book_publish
		(book_id, book_isbn, book_name,
		book_prime_price, book_author,
		book_publisher,
		book_sell_price, book_amount, book_pic_path,
		book_desc,
		book_type_id, user_id,
		publish_time, publish_type)
		values
		(#{bookId,jdbcType=INTEGER}, #{bookIsbn,jdbcType=VARCHAR},
		#{bookName,jdbcType=VARCHAR},
		#{bookPrimePrice,jdbcType=DECIMAL},
		#{bookAuthor,jdbcType=VARCHAR}, #{bookPublisher,jdbcType=VARCHAR},
		#{bookSellPrice,jdbcType=DECIMAL}, #{bookAmount,jdbcType=TINYINT},
		#{bookPicPath,jdbcType=VARCHAR},
		#{bookDesc,jdbcType=VARCHAR},
		#{bookTypeId,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER},
		#{publishTime,jdbcType=TIMESTAMP}, #{publishType,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective"
		parameterType="com.bookyue.model.BookPublish">
		insert into book_publish
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bookId != null">
				book_id,
			</if>
			<if test="bookIsbn != null">
				book_isbn,
			</if>
			<if test="bookName != null">
				book_name,
			</if>
			<if test="bookPrimePrice != null">
				book_prime_price,
			</if>
			<if test="bookAuthor != null">
				book_author,
			</if>
			<if test="bookPublisher != null">
				book_publisher,
			</if>
			<if test="bookSellPrice != null">
				book_sell_price,
			</if>
			<if test="bookAmount != null">
				book_amount,
			</if>
			<if test="bookPicPath != null">
				book_pic_path,
			</if>
			<if test="bookDesc != null">
				book_desc,
			</if>
			<if test="bookTypeId != null">
				book_type_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="publishTime != null">
				publish_time,
			</if>
			<if test="publishType != null">
				publish_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bookId != null">
				#{bookId,jdbcType=INTEGER},
			</if>
			<if test="bookIsbn != null">
				#{bookIsbn,jdbcType=VARCHAR},
			</if>
			<if test="bookName != null">
				#{bookName,jdbcType=VARCHAR},
			</if>
			<if test="bookPrimePrice != null">
				#{bookPrimePrice,jdbcType=DECIMAL},
			</if>
			<if test="bookAuthor != null">
				#{bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="bookPublisher != null">
				#{bookPublisher,jdbcType=VARCHAR},
			</if>
			<if test="bookSellPrice != null">
				#{bookSellPrice,jdbcType=DECIMAL},
			</if>
			<if test="bookAmount != null">
				#{bookAmount,jdbcType=TINYINT},
			</if>
			<if test="bookPicPath != null">
				#{bookPicPath,jdbcType=VARCHAR},
			</if>
			<if test="bookDesc != null">
				#{bookDesc,jdbcType=VARCHAR},
			</if>
			<if test="bookTypeId != null">
				#{bookTypeId,jdbcType=TINYINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="publishTime != null">
				#{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="publishType != null">
				#{publishType,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.bookyue.model.BookPublishExample"
		resultType="java.lang.Long">
		select count(book_id) from book_publish
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update book_publish
		<set>
			<if test="record.bookId != null">
				book_id = #{record.bookId,jdbcType=INTEGER},
			</if>
			<if test="record.bookIsbn != null">
				book_isbn = #{record.bookIsbn,jdbcType=VARCHAR},
			</if>
			<if test="record.bookName != null">
				book_name = #{record.bookName,jdbcType=VARCHAR},
			</if>
			<if test="record.bookPrimePrice != null">
				book_prime_price =
				#{record.bookPrimePrice,jdbcType=DECIMAL},
			</if>
			<if test="record.bookAuthor != null">
				book_author = #{record.bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="record.bookPublisher != null">
				book_publisher =
				#{record.bookPublisher,jdbcType=VARCHAR},
			</if>
			<if test="record.bookSellPrice != null">
				book_sell_price =
				#{record.bookSellPrice,jdbcType=DECIMAL},
			</if>
			<if test="record.bookAmount != null">
				book_amount = #{record.bookAmount,jdbcType=TINYINT},
			</if>
			<if test="record.bookPicPath != null">
				book_pic_path = #{record.bookPicPath,jdbcType=VARCHAR},
			</if>
			<if test="record.bookDesc != null">
				book_desc = #{record.bookDesc,jdbcType=VARCHAR},
			</if>
			<if test="record.bookTypeId != null">
				book_type_id = #{record.bookTypeId,jdbcType=TINYINT},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.publishTime != null">
				publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.publishType != null">
				publish_type = #{record.publishType,jdbcType=TINYINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update book_publish
		set book_id = #{record.bookId,jdbcType=INTEGER},
		book_isbn = #{record.bookIsbn,jdbcType=VARCHAR},
		book_name =
		#{record.bookName,jdbcType=VARCHAR},
		book_prime_price =
		#{record.bookPrimePrice,jdbcType=DECIMAL},
		book_author =
		#{record.bookAuthor,jdbcType=VARCHAR},
		book_publisher =
		#{record.bookPublisher,jdbcType=VARCHAR},
		book_sell_price =
		#{record.bookSellPrice,jdbcType=DECIMAL},
		book_amount =
		#{record.bookAmount,jdbcType=TINYINT},
		book_pic_path =
		#{record.bookPicPath,jdbcType=VARCHAR},
		book_desc =
		#{record.bookDesc,jdbcType=VARCHAR},
		book_type_id =
		#{record.bookTypeId,jdbcType=TINYINT},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		publish_time =
		#{record.publishTime,jdbcType=TIMESTAMP},
		publish_type =
		#{record.publishType,jdbcType=TINYINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.bookyue.model.BookPublish">
		update book_publish
		<set>
			<if test="bookIsbn != null">
				book_isbn = #{bookIsbn,jdbcType=VARCHAR},
			</if>
			<if test="bookName != null">
				book_name = #{bookName,jdbcType=VARCHAR},
			</if>
			<if test="bookPrimePrice != null">
				book_prime_price = #{bookPrimePrice,jdbcType=DECIMAL},
			</if>
			<if test="bookAuthor != null">
				book_author = #{bookAuthor,jdbcType=VARCHAR},
			</if>
			<if test="bookPublisher != null">
				book_publisher = #{bookPublisher,jdbcType=VARCHAR},
			</if>
			<if test="bookSellPrice != null">
				book_sell_price = #{bookSellPrice,jdbcType=DECIMAL},
			</if>
			<if test="bookAmount != null">
				book_amount = #{bookAmount,jdbcType=TINYINT},
			</if>
			<if test="bookPicPath != null">
				book_pic_path = #{bookPicPath,jdbcType=VARCHAR},
			</if>
			<if test="bookDesc != null">
				book_desc = #{bookDesc,jdbcType=VARCHAR},
			</if>
			<if test="bookTypeId != null">
				book_type_id = #{bookTypeId,jdbcType=TINYINT},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="publishType != null">
				publish_type = #{publishType,jdbcType=TINYINT},
			</if>
		</set>
		where book_id = #{bookId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.bookyue.model.BookPublish">
		update book_publish
		set book_isbn =
		#{bookIsbn,jdbcType=VARCHAR},
		book_name = #{bookName,jdbcType=VARCHAR},
		book_prime_price = #{bookPrimePrice,jdbcType=DECIMAL},
		book_author =
		#{bookAuthor,jdbcType=VARCHAR},
		book_publisher =
		#{bookPublisher,jdbcType=VARCHAR},
		book_sell_price =
		#{bookSellPrice,jdbcType=DECIMAL},
		book_amount =
		#{bookAmount,jdbcType=TINYINT},
		book_pic_path =
		#{bookPicPath,jdbcType=VARCHAR},
		book_desc =
		#{bookDesc,jdbcType=VARCHAR},
		book_type_id =
		#{bookTypeId,jdbcType=TINYINT},
		user_id = #{userId,jdbcType=INTEGER},
		publish_time = #{publishTime,jdbcType=TIMESTAMP},
		publish_type =
		#{publishType,jdbcType=TINYINT}
		where book_id =
		#{bookId,jdbcType=INTEGER}
	</update>

	<select id="selectBookPublishCustomByPrimaryKey"
		resultMap="BookPublishCustomResultMap"
		parameterType="java.lang.Integer">
		SELECT
		book_id,
		book_isbn,
		book_name,
		book_prime_price,
		book_author,
		book_publisher,
		book_sell_price,
		book_amount,
		book_pic_path,
		book_desc,
		book_type_id,
		book_publish.user_id AS user_id,
		publish_time,
		publish_type,
		user_name,
		user_sex,
		user_avatar_url
		FROM
		book_publish
		RIGHT
		JOIN user_info ON book_publish.user_id = user_info.user_id
		WHERE
		book_id = #{bookId,jdbcType=INTEGER}
	</select>

	<!-- <select id="selectBookPublishCustomList" resultMap="BookPublishCustomResultMap" 
		parameterType="java.lang.Integer"> SELECT book_id, book_isbn, book_name, 
		book_prime_price, book_author, book_publisher, book_sell_price, book_amount, 
		book_pic_path, book_desc, book_type_id, book_publish.user_id AS user_id, 
		publish_time, publish_type, user_name, user_sex, user_avatar_url FROM book_publish 
		RIGHT JOIN user_info ON book_publish.user_id = user_info.user_id WHERE book_id 
		= #{bookId,jdbcType=INTEGER} </select> -->
	<select id="selectBookPublishCustomByExample"
		parameterType="com.bookyue.model.BookPublishExample"
		resultMap="BookPublishCustomResultMap">
		select
		book_id,
		book_isbn,
		book_name,
		book_prime_price,
		book_author,
		book_publisher,
		book_sell_price,
		book_amount,
		book_pic_path,
		book_desc,
		book_type_id,
		book_publish.user_id AS user_id,
		publish_time,
		publish_type,
		user_name,
		user_sex,
		user_major,
		user_avatar_url
		FROM book_publish
		INNER
		JOIN user_info ON book_publish.user_id = user_info.user_id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

</mapper>